# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# type Todo @model {
#   id: ID!
#   name: String!
#   description: String
# }


type Room 
  @model
  @auth(rules: [
    { allow: private, provider: iam}, 
    { allow: private, ownerField: "participants", operations: [read]}
  ]
  ) {
  id: ID! @primaryKey 
  name: String! 
  participants: [String]!
  requireInvite: Boolean!
  creator: String! 
    @index(name: "byUser", queryField: "roomsByUsername")
  creatorSub: String!,
  messages: [Message] @hasMany(indexName: "byRoom", fields: ["id"]) 
}

type Message 
  @model 
  @auth(
    rules: [
      { allow: private, provider: iam}, 
      { allow: owner, ownerField: "username" }
    ]
  )
  {
  id: ID! @primaryKey
  content: String!
  time: AWSDateTime!
  room: Room @belongsTo(fields: ["roomId"])
  roomId: ID @index(name: "byRoom", sortKeyFields: ["time"])
  username: String!
}


type Subscription {
  newMessage(roomId: ID!): Message 
    @aws_subscribe(mutations: ["createMessage"])
    @auth(rules: [
      { allow: private, provider: iam },
      { allow: public}, 
      { allow: private}
    ])
}